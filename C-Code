#Reverse Dynamic array
#Code

int* reverseArray(int a_count, int* a, int* result_count) {
   *result_count= a_count;
   int start_index=0, temp;
   int end_index= a_count-1;
   while (start_index < a_count/2) {
       temp= *(a+end_index);
       *(a+end_index)= *(a+start_index);
       *(a+start_index)= temp;
       start_index++;
       end_index--;
   }
   return a;
}

int main()
{
    FILE* fptr = fopen(getenv("OUTPUT_PATH"), "w");

    int arr_count = parse_int(ltrim(rtrim(readline())));

    char** arr_temp = split_string(rtrim(readline()));

    int* arr = malloc(arr_count * sizeof(int));

    for (int i = 0; i < arr_count; i++) {
        int arr_item = parse_int(*(arr_temp + i));

        *(arr + i) = arr_item;
    }

    int res_count;
    int* res = reverseArray(arr_count, arr, &res_count);

    for (int i = 0; i < res_count; i++) {
        fprintf(fptr, "%d", *(res + i));

        if (i != res_count - 1) {
            fprintf(fptr, " ");
        }
    }

    fprintf(fptr, "\n");

    fclose(fptr);

    return 0;
}


#Hour Glass Problem 
a a a 
  a  
a a a
#More explanation:  https://nimb.ws/gVxn9p
#Example: https://nimb.ws/NM5ow6
#Code

int hourglassSum(int arr_rows, int arr_columns, int** arr) {
  int i, j, sum_check=0, max_check= -9*7;
  for(i=0; i<=arr_rows/2; i++){
      for(j=0; j<=arr_columns/2; j++){
          sum_check=0;
          sum_check+= arr[i][j] + arr[i][j+1] + arr[i][j+2];
          sum_check+= arr[i+1][j+1];
          sum_check+= arr[i+2][j] + arr[i+2][j+1] + arr[i+2][j+2];
          if(sum_check > max_check){
              max_check=sum_check;
          }
      }
  }
  return max_check;
}

int main()
{
    FILE* fptr = fopen(getenv("OUTPUT_PATH"), "w");

    int** arr = malloc(6 * sizeof(int*));

    for (int i = 0; i < 6; i++) {
        *(arr + i) = malloc(6 * (sizeof(int)));

        char** arr_item_temp = split_string(rtrim(readline()));

        for (int j = 0; j < 6; j++) {
            int arr_item = parse_int(*(arr_item_temp + j));

            *(*(arr + i) + j) = arr_item;
        }
    }

    int result = hourglassSum(6, 6, arr);

    fprintf(fptr, "%d\n", result);

    fclose(fptr);

    return 0;
}

